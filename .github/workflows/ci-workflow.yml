name: Run Tests and Send Allure Report

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"

jobs:
  run-tests-and-send-report:
    name: Run Tests and Send Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-
          save-always: true

      - name: Install Allure CLI
        run: |
            curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/download/2.32.0/allure-2.32.0.zip
            sudo unzip -o allure.zip -d /opt/allure
            sudo ln -s /opt/allure/allure-2.32.0/bin/allure /usr/bin/allure

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Get Previous Workflow Run ID
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PREV_RUN_ID=$(gh api \
            /repos/${{ github.repository }}/actions/runs \
            --jq '.workflow_runs[1].id')
          echo "prev_run_id=$PREV_RUN_ID" >> $GITHUB_ENV

      - name: Get Current Date and Time
        if: always()
        id: date
        run: echo "timestamp=$(date '+%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Install Xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: Xvfb :1 -screen 0 1920x1080x24 &

      - name: Set DISPLAY variable
        run: export DISPLAY=:1

      - name: Restore Allure history from cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ runner.os }}-allure-history
          restore-keys: |
            ${{ runner.os }}-allure-history-${{ github.prev_run_id }}
          path: allure-history

      - name: Run Maven Tests
        env:
          DISPLAY: :1 # IMPORTANT: Set the DISPLAY environment variable
        run: mvn clean test -DretryType=immediate -DretryCount=1 -DthreadCount=3 -Dparallel=methods

      # Generate a new allure-report-cached with updated history
      - name: Generate new Allure cached report
        if: always()
        run: allure generate target/allure-results --clean -o allure-report-cached

      # Copy cached history to target/allure-results
      - name: Copy cached history to target/allure-results
        if: always()
        run: |
          mkdir -p target/allure-results/history
          cp -r allure-history/* target/allure-results/history/

      - name: Save updated Allure history to cache
        if: always()
        uses: actions/cache/save@v4
        with:
          key: ${{ runner.os }}-allure-history-${{ github.run_id }}
          path: allure-report-cached/history

      # Generate final single-file HTML report
      - name: Generate final Allure HTML report
        if: always()
        run: allure generate target/allure-results --single-file --clean -o allure-report

#      - name: Generate Allure Report with history
#        if: always()
#        run: allure generate target/allure-results -o allure-report-cached
#
#      - name: Cache updated Allure history
#        if: always()
#        run: |
#          mkdir -p allure-history
#          cp -r allure-report-cached/history allure-history/
#
#      - name: Prune history to keep latest 20 entries
#        if: always()
#        run: |
#          cd allure-history
#          ls -1t | tail -n +21 | xargs rm -rf || true
#          cd ..
#
#      - name: Save updated history to cache
#        uses: actions/cache@v4
#        with:
#          path: allure-history
#          key: allure-history-cache
#
#      - name: Generate Single File Allure Report as HTML
#        if: always()
#        run:
#          mkdir -p target/allure-results/history
#          cp -r allure-history/* target/allure-results/history/ || true
#          allure generate target/allure-results --single-file --clean -o allure-report



      - name: Rename Single File Report
        if: always()
        run: mv allure-report/index.html allure-report/${{ env.timestamp }}_report.html

      - name: Send Email with Allure HTML Report
        if: always()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "(${{ env.timestamp }}) - Test Report - Allure"
          to: lqthai07t3@gmail.com
          from: thai07t3@gmail.com
          html_body: |
            <h2>Test Report</h2>
            <p>Chào bạn,</p>
            <p>Đây là báo cáo kiểm thử tự động từ GitHub Actions.</p>
            <p>Thời gian kiểm thử: <strong>${{ env.timestamp }}</strong></p>
            <p>Vui lòng xem báo cáo HTML đính kèm.</p>
          attachments: allure-report/${{ env.timestamp }}_report.html
